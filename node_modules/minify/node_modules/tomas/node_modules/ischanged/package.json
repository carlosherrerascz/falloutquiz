{
  "name": "ischanged",
  "version": "1.0.16",
  "author": {
    "name": "coderaiser",
    "email": "mnemonic.enemy@gmail.com",
    "url": "https://github.com/coderaiser"
  },
  "description": "Is file changed check",
  "homepage": "http://github.com/coderaiser/ischanged",
  "main": "lib/ischanged.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/coderaiser/ischanged.git"
  },
  "keywords": [
    "file",
    "time",
    "changes"
  ],
  "dependencies": {
    "checkup": "~1.3.0",
    "debug": "~2.2.0",
    "mkdirp": "~0.5.0",
    "readjson": "~1.1.0",
    "timem": "~1.1.0"
  },
  "devDependencies": {},
  "license": "MIT",
  "readme": "Ischanged\n=========\n\nCheck time of file modification. If it's changed probable file was changed to.\nThere is no 100% assurance that is was, but it works much faster then check by hash.\n\n## Install\n\n`npm i ischanged --save`\n\n## Hot to use?\n\n```js\nvar ischanged = require('ischanged');\n\nischanged('/etc/passwd', function(error, is) {\n    console.log(is);\n    //true\n    \n    ischanged('/etc/passwd', function(error, is) {\n        console.log(is);\n        //false\n    }\n}\n```\n\n## How it works?\n\n`Ischanged` saves time of file modification to file `ischanged/<uid>/changes.json` \nin Temp directory and then checks whas it changed or not.\n\nSo it something like `watch` but:\n\n- should be called by hand;\n- could detect modifications after restart of application;\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/coderaiser/ischanged/issues"
  },
  "_id": "ischanged@1.0.16",
  "_from": "ischanged@~1.0.7"
}
